/*
 * Copyright (c) 2025 Yiancar
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

// #include "nk_classic_tkl-pinctrl.dtsi"
#include "nk_classic_tkl-layouts.dtsi"

/ {
    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,battery = &vbatt;

        // zmk,underglow = &led_strip;
        // zmk,physical-layout = &sixty_percent_ansi_split_bs_rshift;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        // wakeup-source;

        row-gpios
            = <&gpio0 8  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&gpio0 28 GPIO_ACTIVE_HIGH>
            , <&gpio1 13 GPIO_ACTIVE_HIGH>
            , <&gpio0 2  GPIO_ACTIVE_HIGH>
            , <&gpio0 29 GPIO_ACTIVE_HIGH>
            , <&gpio0 31 GPIO_ACTIVE_HIGH>
            , <&gpio0 5  GPIO_ACTIVE_HIGH>
            , <&gpio0 15 GPIO_ACTIVE_HIGH>
            , <&gpio0 20 GPIO_ACTIVE_HIGH>
            , <&gpio0 13 GPIO_ACTIVE_HIGH>
            , <&gpio0 22 GPIO_ACTIVE_HIGH>
            , <&gpio0 24 GPIO_ACTIVE_HIGH>
            , <&gpio1 0  GPIO_ACTIVE_HIGH>
            , <&gpio1 2  GPIO_ACTIVE_HIGH>
            , <&gpio1 4  GPIO_ACTIVE_HIGH>
            , <&gpio0 9  GPIO_ACTIVE_HIGH>
            , <&gpio1 6  GPIO_ACTIVE_HIGH>
            , <&gpio0 10 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <6>;
        columns = <17>;

        map = <
            RC(0,0)         RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)  RC(0,10) RC(0,11) RC(0,12)    RC(0,14) RC(0,15) RC(0,16)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)    RC(1,14) RC(1,15) RC(1,16)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(3,12)    RC(2,14) RC(2,15) RC(2,16)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)          RC(3,13)
            RC(4,0)         RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)      RC(4,12)                 RC(4,15)
            RC(5,0) RC(5,1) RC(5,2)                         RC(5,6)                                  RC(5,11) RC(5,12) RC(5,13)    RC(5,14) RC(5,15) RC(5,16)
        >;
    };

    leds {
        compatible = "gpio-leds";
        blue_led: led_0 {
            gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
            label = "Blue LED";
        };
    };

    ext-power {
        compatible = "zmk,ext-power-generic";
        control-gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "BATTERY";
    };

    // keys {
    //     compatible = "gpio-keys";
    //     soft_off_gpio_key: soft_off_gpio_key {
    //         gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
    //     };
    // };

    // wakeup_scan: wakeup_scan {
    //     compatible = "zmk,gpio-key-wakeup-trigger";
    //     trigger = <&soft_off_gpio_key>;
    //     wakeup-source;
    //     extra-gpios = <&gpio0 10 GPIO_ACTIVE_HIGH>;
    // };

    // soft_off_wakers {
    //     compatible = "zmk,soft-off-wakeup-sources";
    //     wakeup-sources = <&wakeup_scan>;
    // };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&uicr {
    nfct-pins-as-gpios;
};

zephyr_udc0: &usbd {
    status = "okay";
};

// &spi3 {
//     compatible = "nordic,nrf-spim";

//     pinctrl-0 = <&spi3_default>;
//     pinctrl-1 = <&spi3_sleep>;
//     pinctrl-names = "default", "sleep";
//     status = "okay";

//     led_strip: ws2812@0 {
//         compatible = "worldsemi,ws2812-spi";
//         label = "WS2812";

//         /* SPI */
//         reg = <0>; /* ignored, but necessary for SPI bindings */
//         spi-max-frequency = <4000000>;

//         /* WS2812 */
//         chain-length = <12>; /* LED strip length */
//         spi-one-frame = <0x70>;
//         spi-zero-frame = <0x40>;
//         color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
//     };
// };

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };

// &flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    // partitions {
    //     compatible = "fixed-partitions";
    //     #address-cells = <1>;
    //     #size-cells = <1>;

    //     sd_partition: partition@0 {
    //         label = "mbr";
    //         reg = <0x00000000 0x00001000>;
    //     };

    //     code_partition: partition@1000 {
    //         label = "code_partition";
    //         reg = <0x00001000 0x000d3000>;
    //     };

    //     storage_partition: partition@d4000 {
    //         label = "storage";
    //         reg = <0x000d4000 0x00020000>;
    //     };

    //     boot_partition: partition@f4000 {
    //         label = "adafruit_boot";
    //         reg = <0x000f4000 0x0000c000>;
    //     };
    // };
};